import subprocess
import os
import shutil

JOERN_INDEX_DIR = '.joernIndex'
NEO4J_DB_DIR = 'graph.db'


# CodePropertyGraphCreator index
class CodePropertyGraphCreator:

    def __init__(self, neo4j_config, joern_config):
        self.neo4j_config = neo4j_config
        self.joern_config = joern_config

    def create(self, app_source_location):
        joern_installed_location = self.joern_config.installed_location + '/bin/joern.jar'
        neo4j_data_location = self.neo4j_config.data_location

        try:

            if os.path.exists(app_source_location) is False:
                raise Exception('app source location is not found')

            joern_index_path = os.path.abspath(JOERN_INDEX_DIR)

            # remove old joern index dir
            self.__remove_joern_index(joern_index_path)

            # run joern to create graph indexes from app source code
            subprocess.call(["java", "-jar", joern_installed_location, app_source_location])

            # check joern index dir is created
            if os.path.exists(joern_index_path) is False:
                raise Exception('joern_index dir is not found')

            neo4j_db_dir_path = neo4j_data_location + '/' + NEO4J_DB_DIR
            # remove neo4j db dir if exists
            if os.path.exists(neo4j_db_dir_path):
                shutil.rmtree(neo4j_db_dir_path)

            shutil.copytree(joern_index_path, neo4j_db_dir_path)

            # remove old joern index dir
            self.__remove_joern_index(joern_index_path)

        except Exception as e:
            raise Exception("code property graph creator failed, cause : %r" % e.message)

    @staticmethod
    def __remove_joern_index(joern_index_path):
        # remove old joern index dir
        if os.path.exists(joern_index_path):
            shutil.rmtree(joern_index_path)

