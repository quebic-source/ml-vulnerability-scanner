import time
from common_util import listdir
import numpy as np


class Predictor:
    def __init__(self, predictor_config, ctm, nn_model):
        self.predictor_config = predictor_config
        self.ctm = ctm
        self.nn_model = nn_model

    def predict(self):
        print "predict start"
        start = time.time()

        try:
            x = []
            code_matrix = self.ctm.convert(self.predictor_config.app_location)
            x.append(code_matrix)

            predicts = self.nn_model.predict(x)
            for predict in predicts:

                print "predictions", predict
                predicted_class_index = np.argmax(predict)
                print "predicted class index", predicted_class_index

                if predicted_class_index == 0:
                    print "\n --- Stack-based Buffer Overflow Vulnerability found --- \n"
                elif predicted_class_index == 1:
                    print "\n --- Improper Validation of Array Index Vulnerability found --- \n"
                else:
                    print "\n --- Vulnerability not found --- \n"

        except Exception as e:
            raise e

        print "time spent : ", (time.time() - start), " seconds"
        print "predict completed"
